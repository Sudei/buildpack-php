#!/usr/bin/env bash

# Copyright 2014 cloudControl GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# bin/compile <build-dir> <cache-dir>

set -eo pipefail

if [ "$#" -ne 2 ]; then
	echo "usage: bin/compile <build-dir> <cache-dir>"
	exit 1
fi

BIN_DIR=$(readlink -f $(dirname $0))
BP_DIR=$(readlink -f $(dirname $BIN_DIR))
BUILD_DIR=$1
CACHE_DIR=$2
APACHE_PATH="$BUILD_DIR/apache"
PHP_PATH="$BUILD_DIR/php"
CODE_DIR=code
PROJECT_ROOT=$BUILD_DIR/$CODE_DIR

export CACHE_DIR

cd $BUILD_DIR

source $BIN_DIR/util/helper.sh
source $BIN_DIR/util/framework.sh
source $BIN_DIR/util/deprecated.sh

# Load buildpack environment
if [[ -f .buildpack/envrc ]]; then
	source .buildpack/envrc
fi

source $BIN_DIR/util/blackfire.sh

# move everything in BUILD_DIR except buildpack-specific files to PROJECT_ROOT
TMP=$(mktemp -d --tmpdir=.)
find . -mindepth 1 -maxdepth 1 -not -regex "./Procfile\|$TMP\|./.buildpack" -exec mv --target-directory="$TMP" '--' '{}' +
mv "$TMP" "$PROJECT_ROOT"
ln -s code www

mkdir -p $APACHE_PATH/logs
mkdir -p $APACHE_PATH/conf/{share,local,user}
mkdir -p $PHP_PATH/{box,conf,logs}
mkdir -p $BUILD_DIR/.profile.d

cp $BP_DIR/support/boot.sh .

if [[ -f $PROJECT_ROOT/composer.json ]]; then
	exts=($(/vagrant/opt/jq -r '.require | keys | map(select(startswith("ext-"))) | map(.[4:])|.[]' $PROJECT_ROOT/composer.json))

	# Install extensions
	if [[ ${exts[*]} =~ "blackfire" ]]; then
		install_blackfire
	fi


	# Caching: pre-install
	CACHED_DIRS=$(cat $PROJECT_ROOT/composer.json | $BP_DIR/opt/jq -e -r '.config["vendor-dir"]') || CACHED_DIRS="vendor"

	mkdir -p $CACHE_DIR
	for dir in $CACHED_DIRS; do
		if [[ -e $PROJECT_ROOT/$dir ]]; then
			cp -R $PROJECT_ROOT/$dir $CACHE_DIR/ &> /dev/null || true
		fi

		mkdir -p $PROJECT_ROOT/$dir
		cp -R $CACHE_DIR/${dir##*/}/* $PROJECT_ROOT/$dir/ &> /dev/null || true
	done

	# Check if the new build process should be used
	PHP_VERSION_CHECK=`$BP_DIR/opt/jq --raw-output '.require | .["php-64bit"]' $PROJECT_ROOT/composer.json`
	if [ $PHP_VERSION_CHECK != null ]; then
		APACHE_VERSION=2.2.29
		echo "Using apache version ${APACHE_VERSION}"
		echo "Url: http://packages.${DOMAIN}/buildpack-php/httpd-${APACHE_VERSION}.tar.bz2"
		#TODO enable https again
		#curl --silent --location "https://packages.${DOMAIN}/buildpack-php/httpd-${APACHE_VERSION}.tar.bz2" | tar jx
		curl --silent --location "http://packages.${DOMAIN}/buildpack-php/httpd-${APACHE_VERSION}.tar.bz2" | tar jx

		echo "Using php version ${PHP_VERSION_CHECK}"
		PHP_VERSION=php-${PHP_VERSION_CHECK}
		echo "Url: https://packages.${DOMAIN}/buildpack-php/${PHP_VERSION}.tar.bz2"
		#TODO enable https again
		#curl --silent --location "https://packages.${DOMAIN}/buildpack-php/${PHP_VERSION}.tar.bz2" | tar jx
		curl --silent --location "http://packages.${DOMAIN}/buildpack-php/${PHP_VERSION}.tar.bz2" | tar jx

		mkdir -p .profile.d
		echo "export PATH=`pwd`/${PHP_VERSION}/bin:`pwd`/httpd-${APACHE_VERSION}/bin:$PATH" > .profile.d/php.sh
		source .profile.d/php.sh

		echo 'Fix PHP_INI_SCAN_DIR set due to run.sh'
		cp $BP_DIR/opt/boot.sh boot.sh
		cp $BP_DIR/opt/php.ini ${PHP_VERSION}/etc/php.ini
	fi

	# Install composer
	echo "Installing composer dependencies..." | indent_head
	if [[ ! -f $PROJECT_ROOT/composer.phar ]]; then
		curl --remote-name --silent https://getcomposer.org/installer
		php installer --quiet --install-dir=$PROJECT_ROOT
		if [ $PHP_VERSION_CHECK != null ]; then
			rm installer
		fi
	fi

	php $PROJECT_ROOT/composer.phar install $COMPOSER_INSTALL_ARGS -n -d $PROJECT_ROOT/ | indent

	# Clean the Image
	rm $PROJECT_ROOT/composer.phar

	# Caching: post-install
	for dir in $CACHED_DIRS; do
		rm -rf $CACHE_DIR/${dir##*/}
		cp -R $PROJECT_ROOT/$dir $CACHE_DIR/
	done
fi

# Disable .ccconfig.yaml for new builds
if [ $PHP_VERSION_CHECK == null ]; then
	check_ccconfig()
fi

framework_detection()

if [ $PHP_VERSION_CHECK == null ]; then
	check_luigi()
fi

# set default values if not defined in user custom configuration files
if ! grep -q -s "DocumentRoot" .buildpack/apache/conf/*.conf ; then
	DOCUMENT_ROOT="/app/code/$WEBCONTENT"
	echo "DocumentRoot \"$DOCUMENT_ROOT\"" > $APACHE_PATH/conf/share/documentroot.conf
	if [ $APACHE_VERSION == 2.2.29 ]; then
		cat >> $APACHE_PATH/conf/share/documentroot.conf <<EOF
<Directory "$DOCUMENT_ROOT">
	AllowOverride All
	Options SymlinksIfOwnerMatch
	Order Deny,Allow
	Allow from All
	DirectoryIndex index.php index.html index.htm
</Directory>
EOF
	else
		cat >> $APACHE_PATH/conf/share/documentroot.conf <<EOF
<Directory "$DOCUMENT_ROOT">
	AllowOverride All
	Options SymlinksIfOwnerMatch
	Require all granted
	DirectoryIndex index.php index.html index.htm
</Directory>
EOF
	fi
fi

if [ -f .buildpack/php-fpm/conf/php-fpm.ini ]; then
	php $BP_DIR/support/merge_conf.php $BP_DIR/conf/php-fpm.ini .buildpack/php-fpm/conf/php-fpm.ini $PHP_PATH/php-fpm.ini
else
	cp $BP_DIR/conf/php-fpm.ini $PHP_PATH
fi

cp $BP_DIR/conf/php.ini $PHP_PATH/conf/010_php.ini

if [ $PHP_VERSION_CHECK == null ]; then
	copy_default_config()
fi

if [ -d .buildpack/php/conf ]; then
	cp .buildpack/php/conf/*.ini $PHP_PATH/conf/
fi

if [ $PHP_VERSION_CHECK == null ]; then
	cp $BP_DIR/conf/httpd.conf $APACHE_PATH/conf
else
	cp $BP_DIR/opt/httpd.conf $APACHE_PATH/conf
	cp $BP_DIR/opt/mime.types $APACHE_PATH/conf
fi

if [ -d .buildpack/apache/conf ]; then
	cp .buildpack/apache/conf/* $APACHE_PATH/conf/user
fi

if [ $PHP_VERSION_CHECK == null ]; then
	configure_apc()
fi
